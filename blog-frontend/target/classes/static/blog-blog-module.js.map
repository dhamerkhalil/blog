{"version":3,"sources":["./src/app/blog/blog-routing.module.ts","./src/app/blog/blog.module.ts","./src/app/blog/profile/profile.component.html","./src/app/blog/profile/profile.component.ts"],"names":[],"mappings":"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","file":"blog-blog-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ProfileComponent } from './profile/profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileComponent\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n  }\n ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BlogRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BlogRoutingModule } from './blog-routing.module';\nimport { ProfileComponent } from './profile/profile.component';\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [ProfileComponent],\n  imports: [\n    CommonModule,\n    BlogRoutingModule,\n    FormsModule\n  ]\n})\nexport class BlogModule { }\n","<div class=\"wrapper\">\n  <h3>{{userName}}</h3>\n    <input type=\"button\"  (click)=\"logOut()\" name=\"logout\" value=\"logout\">\n\n    <div id=\"formContent\">\n        <input type=\"text\" id=\"postText\"  name=\"postText\" placeholder=\"type your post here\" [(ngModel)]=\"postText\">\n        <input type=\"button\"  (click)=\"publishPost()\" value=\"publish Post\">\n        <span  *ngIf=\"errorLogoutFound\"> {{errorMsg}} </span>\n    </div>\n\n    <div id=\"postCommentContent\"  >\n        <!-- post -->\n        <div id=\"formContent\" *ngFor=\"let status of statusList\">\n          <span class=\"wrapper\" id=\"postText\"  name=\"postText\" placeholder=\"your is post here\">  {{status.date | date: 'dd/MM/yyyy HH:mm'}} {{status.statusUser.fullName}} : {{status.text}}</span>\n          <input *ngIf=\"currentUser.id == status.statusUser.id\" type=\"button\" (click)=\"deletePost(status.id)\"  value=\"delet post\"> \n        \n\n        <div id=\"postCommentContent\">\n            <!-- comment list -->\n            <h3>Comments:</h3>\n            <div id=\"CommentContent\" *ngFor=\"let comment of this.status.statusComments\">\n                <span class=\"wrapper\" id=\"commentText\"  name=\"commentText\" placeholder=\"your is comment here\">{{comment.date | date: 'dd/MM/yyyy HH:mm'}} {{comment.user.fullName}} : {{comment.text}}</span>\n                <input type=\"button\" *ngIf=\"currentUser.id == comment.user.id\" (click)=\"deleteComment(comment.id)\"  value=\"delete comment\">      \n            </div>\n            <!-- comment Form -->\n            <div id=\"postCommentContent\">\n              <input type=\"text\"  name=\"addCommentText\" placeholder=\"type your comment here\" #commentText>\n              <input type=\"button\" (click)=\"publishComment(status.id,commentText)\" value=\"publish comment\">\n            </div>\n          </div>\n        </div>\n      </div>\n  </div>","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  statusList : any;\n  errorFound = false;\n  errorMsg: any;\n  postText = '';\n  commentText = '';\n  publishPostSuccess = false;\n  errorLogoutFound = false;\n  logoutSuccess = false;\n  errorLogoutMsg: any;\n  errorDeletePostFound = false;\n  deletePostSuccess =  false;\n  errorDeleteCommentFound: boolean = false;\n  deleteCommentSuccess: boolean = false;\n  publishCommentSuccess: boolean = false;\n  errorPostMsg: any;\n  errorCommentMsg: any;\n  currentUser: any;\n  userName = ''\n  errorCommentFound: boolean = false;\n\n  constructor(private router : Router, private httpClient : HttpClient) {\n  }\n  \n  ngOnInit(): void {\n    this.getCurrentUser();\n   this.getAllStatus();\n  }\n\n  public getAllStatus(){\n    this.httpClient.get('http://localhost:8080/status')\n    .subscribe(data => \n      {\n        this.statusList = data;\n        console.log('status list size :' +  this.statusList.length)\n      }, \n      error => {\n        this.errorFound = true\n        this.errorMsg = error.error.exception;\n      });\n  }\n\n  public publishPost(){\n    this.errorFound = false;\n    this.publishPostSuccess = false;\n    this.httpClient.post('http://localhost:8080/add-status',{'text': this.postText})\n    .subscribe(data => \n      {\n        this.publishPostSuccess  = true\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n          this.router.navigate(['/blog']);});\n      }, \n      error => {\n        this.errorFound = true\n        this.errorMsg = error.error.exception;\n      });\n  }\n\n  public logOut(){\n    this.errorLogoutFound = false;\n    this.httpClient.get('http://localhost:8080/logout');\n        console.log('logged out')\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n          this.router.navigate(['/login']);});\n  }\n\n  public deletePost(postId: number){\n\n    this.errorDeletePostFound = false;\n    this.deletePostSuccess = false;\n    this.httpClient.delete('http://localhost:8080/delete-status/'+postId)\n    .subscribe(data => \n      {\n        this.deletePostSuccess  = true\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n          this.router.navigate(['/blog']);});\n      }, \n      error => {\n        this.errorDeletePostFound = true\n        this.errorPostMsg = error.error.exception;\n      });\n\n  }\n\n  public publishComment(statusId : number, commentText : any){\n    this.errorCommentFound = false;\n    this.publishCommentSuccess = false;\n    this.httpClient.post('http://localhost:8080/add-comment/'+statusId,{'text': commentText.value})\n    .subscribe(data => \n      {\n        this.publishCommentSuccess  = true\n        this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n          this.router.navigate(['/blog']);});\n      }, \n      error => {\n        this.errorFound = true\n        this.errorMsg = error.error.exception;\n      });\n  }\n\n public deleteComment(commentId : number){\n  this.errorDeleteCommentFound = false;\n  this.deleteCommentSuccess = false;\n  this.httpClient.delete('http://localhost:8080/delete-comment/'+commentId)\n  .subscribe(data => \n    {\n      this.deleteCommentSuccess  = true\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n        this.router.navigate(['/blog']);});\n    }, \n    error => {\n      this.errorDeleteCommentFound = true\n      this.errorCommentMsg = error.error.exception;\n    });\n }\n\npublic getCurrentUser(){\n  this.httpClient.get('http://localhost:8080/current-logged-user')\n  .subscribe(data => \n    {\n      this.currentUser = data\n      console.log('current logged user'+ this.currentUser.fullName)\n      console.log('current logged user'+ this.currentUser.id)\n      this.userName = this.currentUser.fullName\n    }, \n    error => {\n      console.log('no logged user')\n      this.router.navigateByUrl('/', {skipLocationChange: true}).then(() => {\n        this.router.navigate(['/login']);});\n    });\n}\n\n}\n"],"sourceRoot":"webpack:///"}